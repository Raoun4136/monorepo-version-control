name: Vercel Staging Deployment

on:
  push:
    branches:
      - release

jobs:
  check-pr-labels:
    runs-on: ubuntu-latest
    outputs:
      PR_LABELS: ${{ steps.get_labels.outputs.PR_LABELS }}
    steps:
      # Checkout the repository
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: release
      # Extract PR number from commit message
      - name: Extract PR number
        id: extract_pr_number
        run: |
          PR_NUMBER=$(echo "${{ github.event.head_commit.message }}" | grep -o -E "#[0-9]+" | head -n 1 | tr -d '#')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "PR_NUMBER=$PR_NUMBER"

      # Get PR labels using GitHub API and sanitize the output
      - name: Get PR Labels
        id: get_labels
        run: |
          if [ -n "${{ steps.extract_pr_number.outputs.PR_NUMBER }}" ]; then
            LABELS=$(gh pr view ${{ steps.extract_pr_number.outputs.PR_NUMBER }} --json labels --jq '.labels[].name' | tr '\n' ',' | sed 's/,$//')
            echo "PR_LABELS=$LABELS" >> $GITHUB_OUTPUT
            echo "PR_LABELS=$LABELS"
          else
            echo "No PR number found in commit message."
            exit 0
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-apps:
    # Deploy Apps if 'deploy-apps' label is present
    runs-on: ubuntu-latest
    needs: check-pr-labels
    if: contains(needs.check-pr-labels.outputs.PR_LABELS, 'deploy-apps')
    environment: Staging – monorepo-version-control-apps
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: release
      - name: Deploy Apps
        uses: BetaHuhn/deploy-to-vercel-action@v1
        with:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_APPS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRODUCTION: false
          GITHUB_DEPLOYMENT: false
          ALIAS_DOMAINS: stg-monorepo-version-control-apps.vercel.app

  deploy-apps-jp:
    # Deploy Apps-jp if 'deploy-apps-jp' label is present
    runs-on: ubuntu-latest
    needs: check-pr-labels
    if: contains(needs.check-pr-labels.outputs.PR_LABELS, 'deploy-apps-jp')
    environment: Staging – monorepo-version-control-apps-jp
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: release
      - name: Deploy Apps-jp
        uses: BetaHuhn/deploy-to-vercel-action@v1
        with:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_APPS_JP }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRODUCTION: false
          GITHUB_DEPLOYMENT: false
          ALIAS_DOMAINS: stg-monorepo-version-control-apps-jp.vercel.app

  deploy-landing:
    # Deploy Landing if 'deploy-landing' label is present
    runs-on: ubuntu-latest
    needs: check-pr-labels
    if: contains(needs.check-pr-labels.outputs.PR_LABELS, 'deploy-landing')
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: release
      - name: Deploy Landing
        run: echo "Deploy Landing-jp"

  deploy-landing-jp:
    # Deploy Landing-jp if 'deploy-landing-jp' label is present
    runs-on: ubuntu-latest
    needs: check-pr-labels
    if: contains(needs.check-pr-labels.outputs.PR_LABELS, 'deploy-landing-jp')
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: release
      - name: Deploy Landing-jp
        run: echo "Deploy Landing-jp"
